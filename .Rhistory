unzip('activity.zip')
data<-read.csv("activity.csv")
View(data)
stepsByDay <- tapply(data$steps, data$date, sum, na.rm=TRUE)
qplot(stepsByDay, xlab='Total steps per day', ylab='Frequency using binwith 500', binwidth=500)
library(ggplot2)
qplot(stepsByDay, xlab='Total steps per day', ylab='Frequency using binwith 500', binwidth=500)
steps_by_day <- aggregate(steps ~ date, data, sum)
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
rmean <- mean(steps_by_day$steps)
rmedian <- median(steps_by_day$steps)
stepsbyDay<- aggregate(. ~ year, FUN = sum, data)
hist(stepsbyDay$steps,col = "red",main = "Total number of steps each day during October and November 2012",xlab = "Total steps")
stepsbyDay<- aggregate(. ~ year, FUN = sum, data)
hist(stepsbyDay$steps,col = "red",main = "Total number of steps each day during October and November 2012",xlab = "Total steps")
stepsbyDay<- aggregate(. ~ year, FUN = sum, data)
stepsbyDay<- aggregate(. ~ date, FUN = sum, data)
hist(stepsbyDay$steps,col = "red",main = "Total number of steps each day during October and November 2012",xlab = "Total steps")
steps_by_day <- aggregate(steps ~ date, data, sum)
hist(steps_by_day$steps, main = paste("Total Steps Each Day"), col="blue", xlab="Number of Steps")
stepsbyDay<- aggregate(steps ~ date, FUN = sum, data)
hist(stepsbyDay$steps,col = "red",main = "Total number of steps each day during October and November 2012",xlab = "Total steps")
stepsinterval <- aggregate(steps ~ interval, FUN = data, mean)
stepsinterval <- aggregate(steps ~ interval, FUN = data, mean)
stepsinterval <- aggregate(steps ~ interval, FUN = mean, data)
View(stepsinterval)
View(stepsbyDay)
stepsbyInterval <- aggregate(steps ~ interval, FUN = mean, data)
plot(stepsbyInterval$interval,stepsbyInterval$steps,xlab="5-minute interval",ylab="no. of steps averaged across all days",main="Average steps taken everyday for each 5-minute interval")
steps_by_interval <- aggregate(steps ~ interval, data, mean)
plot(steps_by_interval$interval,steps_by_interval$steps, type="l", xlab="Interval", ylab="Number of Steps",main="Average Number of Steps per Day by Interval")
stepsbyInterval <- aggregate(steps ~ interval, FUN = mean, data)
plot(stepsbyInterval$interval,stepsbyInterval$steps,type="l",xlab="5-minute interval",ylab="no. of steps averaged across all days",main="Average steps taken everyday for each 5-minute interval")
Max_steps_interval<-stepsbyInterval$interval[max(stepsbyInterval$interval),]
Max_steps_interval<-stepsbyInterval[max(stepsbyInterval$interval),1]
max_interval <- steps_by_interval[which.max(steps_by_interval$steps),1]
Max_steps_interval<-stepsbyInterval[which.max(stepsbyInterval$interval),1]
Max_steps_interval<-stepsbyInterval[which.max(stepsbyInterval$steps),1]
missing_filled<-data[is.na(data)]<-0
missing_filled<-data[!is.na(data)]<-0
data1<-data
data1$steps <- impute(activityData$steps, fun=mean)
install.packages("scales")
data1$steps <- impute(data$steps, fun=mean)
install.packages("Hmisc")
library(scales)
activityDataImputed$steps <- impute(activityData$steps, fun=mean)
library(Hmisc)
activityDataImputed$steps <- impute(activityData$steps, fun=mean)
data1$steps <- impute(data$steps, fun=mean)
View(data1)
missing_filled<-data[!is.na(data)]
missing_filled<-data[is.na(data)]
data1<-data
data1[is.na(data1)]<-0
View(data1)
data1<-data
View(data1)
data<-read.csv("activity.csv")
data1<-data
data1[is.na(data1)]<-0
View(data1)
data1$steps <- impute(data$steps, fun=mean)
View(data1)
Mean<-mean(stepsbyDay$steps)
hist(stepsbyDay$steps,col = "red",main = "Total number of steps each day during October and November 2012",xlab = "Total steps")
Mean<-mean(stepsbyDay$steps)
Median<-median(stepsbyDay$steps)
new_data<-data
new_data[is.na(new_data)]<-0
View(new_data)
activityDataImputed$steps <- impute(activityData$steps, fun=mean)
library(scales)
library(scales)
activityDataImputed$steps <- impute(activityData$steps, fun=mean)
library(Hmisc)
activityDataImputed$steps <- impute(activityData$steps, fun=mean)
data<-read.csv("activity.csv")
new_data<-data
new_data$steps<-impute(new_data,mean)
new_data<-data
new_data$steps<-impute(new_data$steps,mean)
View(new_data)
mean(data$steps)
mean(data$steps,is.na=F)
mean(data$steps,is.na=T)
mean(data$steps,is.na=T)
data$date <- as.POSIXlt(date,format="%Y-%m-%d")
date<-data$date
isWeekday(date, wday = 1:5)
library(lubridate)
new_data$date <- as.Date(new_data1$date)
#create a vector of weekdays
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
#Use `%in%` and `weekdays` to create a logical vector
#convert to `factor` and specify the `levels/labels`
new_data$wDay <- factor((weekdays(new_data$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
library(lubridate)
new_data$date <- as.Date(new_data$date)
#create a vector of weekdays
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
#Use `%in%` and `weekdays` to create a logical vector
#convert to `factor` and specify the `levels/labels`
new_data$wDay <- factor((weekdays(new_data$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
new_data$date <- as.Date(new_data$date)
#create a vector of weekdays
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
#Use `%in%` and `weekdays` to create a logical vector
#convert to `factor` and specify the `levels/labels`
new_data$wDay <- factor((weekdays(new_data$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
new_data$date <- as.Date(new_data$date)
#create a vector of weekdays
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
#Use `%in%` and `weekdays` to create a logical vector
#convert to `factor` and specify the `levels/labels`
new_data$wDay <- factor((weekdays(new_data$date) %in% weekdays1),
levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
new_data$date <- as.Date(new_data$date)
#create a vector of weekdays
weekdays1 <- c('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday')
#Use `%in%` and `weekdays` to create a logical vector
#convert to `factor` and specify the `levels/labels`
new_data$wDay <- factor((weekdays(new_data$date) %in% weekdays1),levels=c(FALSE, TRUE), labels=c('weekend', 'weekday')
)
View(new_data)
x<-aggregate(steps~wday,sum,new_data)
x<-aggregate(steps~wday,FUN = sum,new_data)
x<-aggregate(steps~wDay,FUN = sum,new_data)
View(x)
x<-aggregate(.~wDay,FUN = sum,new_data)
